인텔리제이
[Nuxt_back] dependencies 실행
src - main - java - erp - application.class 실행

VScode
터미널 - pnpm run dev

크롬 - 우측상단 - 새 시크릿 창 (시크릿 모드에서 실행)


















======================================================

Nuxt는 실행시 가장 먼저 default or index 를 먼저 찾는다
왜 찾는지에 대해 연구를 존나 해봣는데 시간 개같이 날려서 알아낸 내용까지만 정리해본다.
원래는 index.html을 찾아야하는데 우리 프로젝트엔 해당 파일이 존재하지 않는다.
그럼 nuxt는 차선책으로 pages폴더나 layouts폴더를 뒤지게 되는데 layouts에 default.vue라는
파일이 있어 이거부터 실행하였다.
프로젝트 실행하면 index.html없다고 경고 ㅈㄴ 뜨다가 마지막에 layouts에 defalut 불러왓다고 함
중간에 많은 내부로직의 동작이 있는데 관련된 정보를 못찾거나 찾아도 해외자료라 해석못했음
ㅅㅄㅄㅄㅄㅄㅂ


아무튼 layouts-> components-> default.vue 의 template부터 코드 해석시작하면 되고
 <Component
    v-bind="layoutAttrs"
    :is="
      configStore.appContentLayoutNav === AppContentLayoutNav.Vertical
        ? DefaultLayoutWithVerticalNav
        : DefaultLayoutWithHorizontalNav
    "
  >
    <slot />
  </Component>

삼항연산자 내용에 따라
configStore.appContentLayoutNav 에 내용 체크
(13항에 const configStore = useConfigStore(); 로 인해 
@core에 stores에 useConfigStore로 이동 )


---------@core/stores/config.ts
export const useConfigStore = defineStore('config', () => {
  // 👉 Theme
  const userPreferredColorScheme = usePreferredColorScheme()
  const cookieColorScheme = cookieRef<'light' | 'dark'>('color-scheme', 'light')

  watch(
    userPreferredColorScheme,
    val => {
      if (val !== 'no-preference')
        cookieColorScheme.value = val
    },
    { immediate: true },
  )

  const theme = cookieRef('theme', themeConfig.app.theme)

  // 👉 isVerticalNavSemiDark
  const isVerticalNavSemiDark = cookieRef('isVerticalNavSemiDark', themeConfig.verticalNav.isVerticalNavSemiDark)

  // 👉 isVerticalNavSemiDark
  const skin = cookieRef('skin', themeConfig.app.skin)

  // ℹ️ We need to use `storeToRefs` to forward the state
  const {
    isLessThanOverlayNavBreakpoint,
    appContentWidth,
    navbarType,
    isNavbarBlurEnabled,
    appContentLayoutNav,
    isVerticalNavCollapsed,
    footerType,
    isAppRTL,
  } = storeToRefs(useLayoutConfigStore())
--------------------------------------------------------------------------------	
	@layouts/stores/useLayoutConfigStore()
	코드 너무 길어서 대충 설명하자면 

    	isLessThanOverlayNavBreakpoint,
    	appContentWidth,
    	navbarType,
    	isNavbarBlurEnabled,
    	appContentLayoutNav,
    	isVerticalNavCollapsed,
   	footerType,
    	isAppRTL,

	이 변수들 각각 메서드 이용해서 세팅해서 리턴함.
--------------------------------------------------------------------------------

  return {
    theme,
    isVerticalNavSemiDark,
    skin,

    // @layouts exports
    isLessThanOverlayNavBreakpoint,
    appContentWidth,
    navbarType,
    isNavbarBlurEnabled,
    appContentLayoutNav,                <- 이 부분에 세팅된값을 참조해서 아래 default.vue를 보자
    isVerticalNavCollapsed,
    footerType,
    isAppRTL,
  }
})
--------------------------------------------------------------------------------
----default.vue

 <Component
    v-bind="layoutAttrs"
    :is="
      configStore.appContentLayoutNav === AppContentLayoutNav.Vertical
        ? DefaultLayoutWithVerticalNav
        : DefaultLayoutWithHorizontalNav
    "
  >
    <slot />
  </Component>







