<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed Feb 26 09:48:32 KST 2020-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.seoulit.erp.account.slip.dao.JournalDAO">

    <resultMap id="journalResult" type="kr.co.seoulit.erp.account.slip.to.JournalBean">
        <result property="id" column="ID"/>
        <result property="slipNo" column="SLIP_NO"/>
        <result property="journalNo" column="JOURNAL_NO"/>
        <result property="balanceDivision" column="BALANCE_DIVISION"/>
        <result property="accountCode" column="ACCOUNT_INNER_CODE"/>
        <result property="accountName" column="ACCOUNT_NAME"/>
        <result property="customerCode" column="CUSTOMER_CODE"/>
        <result property="customerName" column="CUSTOMER_NAME"/>
        <result property="price" column="PRICE"/>
        <result property="leftDebitPrice" column="LEFT_DEBTOR_PRICE"/>
        <result property="rightCreditPrice" column="RIGHT_CREDITS_PRICE"/>
        <result property="price" column="REPORTING_DATE"/>
        <result property="deptCode" column="DEPT_CODE"/>
        <result property="accountPeriodNo" column="ACCOUNT_PERIOD_NO"/>
    </resultMap>

    <resultMap id="journalDoubleResult" type="kr.co.seoulit.erp.account.slip.to.JournalDoubleBean">
        <result property="reportingDate" column="REPORTING_DATE"/>
        <result property="leftAccountName" column="LEFT_ACCOUNT_NAME"/>
        <result property="leftDebitPrice" column="LEFT_DEBTOR_PRICE"/>
        <result property="rightAccountName" column="RIGHT_ACCOUNT_NAME"/>
        <result property="rightCreditPrice" column="RIGHT_CREDITS_PRICE"/>
        <result property="customerName" column="CUSTOMER_NAME"/>
        <result property="expenseReport" column="EXPENSE_REPORT"/>
    </resultMap>

    <!--  <resultMap id="journalDeadlineResult" type="kr.co.seoulit.erp.acc.account.slip.to.JournalSeparatorBean">
        <result property="slipNo" column="SLIP_NO"/>
        <result property="deliveryNo" column="DELIVERY_NO"/>
        <result property="empCode" column="EMP_CODE"/>
        <result property="applyYearMonth" column="APPLY_YEAR_MONTH"/>
    </resultMap>  -->
    
   <select id="selectRangedJournalList" parameterType="Map" resultMap="journalResult">
      <![CDATA[
        SELECT J.JOURNAL_NO,
               J.SLIP_NO,
               BALANCE_DIVISION,
               J.ACCOUNT_INNER_CODE,
               CUSTOMER_CODE,
               LEFT_DEBTOR_PRICE,
               RIGHT_CREDITS_PRICE,
               A.ACCOUNT_NAME
        FROM SLIP S,
             JOURNAL J,
             ACCOUNT A
        WHERE J.SLIP_NO = S.SLIP_NO
          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE
          AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}
          AND S.SLIP_STATUS = '승인'
        ORDER BY S.REPORTING_DATE
        ]]> 
    </select>

    <!-- 2024-05-27 수정 : 총 계정원장 월별 조회-->
    <select id="selectGeneralAccountLedgerList" parameterType="Map" resultType="kr.co.seoulit.erp.account.slip.to.GeneralAccountLedgerBean">
      <![CDATA[
        SELECT
            SUBSTR(s.REPORTING_DATE, 1, 7) AS REPORTING_DATE, -- 작성월
            SUM(TO_NUMBER(REPLACE(j.LEFT_DEBTOR_PRICE, ',', ''))) AS LEFT_DEBIT_PRICE, -- 차변금액 합계
            SUM(TO_NUMBER(REPLACE(j.RIGHT_CREDITS_PRICE, ',', ''))) AS RIGHT_CREDIT_PRICE, -- 대변금액 합계
            SUM(TO_NUMBER(REPLACE(j.LEFT_DEBTOR_PRICE, ',', ''))) - SUM(TO_NUMBER(REPLACE(j.RIGHT_CREDITS_PRICE, ',', ''))) AS TOTAL_BALANCE -- 총 잔액
        FROM
            SLIP S, -- 전표
            JOURNAL J, -- 분개
            ACCOUNT A -- 계정과목
        WHERE
            S.SLIP_NO = J.SLIP_NO
          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE
          AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}
          AND S.SLIP_STATUS = '승인'
          AND A.ACCOUNT_INNER_CODE = #{accountCode}
        GROUP BY
            SUBSTR(s.REPORTING_DATE, 1, 7)
        ORDER BY
            SUBSTR(s.REPORTING_DATE, 1, 7)
        ]]>
        </select>

    <!-- 2024-05-28 추가 : 총 계정원장 일자별 조회
         2025-03-14  lgt 변경
    -->
    <select id="selectGeneralAccountLedgerListDaily" parameterType="Map" resultType="kr.co.seoulit.erp.account.slip.to.GeneralAccountLedgerBean">
--         SELECT s.REPORTING_DATE AS REPORTING_DATE, -- 작성일자
--                SUM(TO_NUMBER(REPLACE(j.LEFT_DEBTOR_PRICE, ',', ''))) AS LEFT_DEBIT_PRICE, -- 차변금액
--                SUM(TO_NUMBER(REPLACE(j.RIGHT_CREDITS_PRICE, ',', ''))) AS RIGHT_CREDIT_PRICE , -- 대변금액
--                SUM(TO_NUMBER(REPLACE(j.LEFT_DEBTOR_PRICE, ',', ''))) - SUM(TO_NUMBER(REPLACE(j.RIGHT_CREDITS_PRICE, ',', ''))) AS Total_Balance
--         FROM SLIP S  --전표
--            , JOURNAL J  --분개
--            , ACCOUNT A  --계정과목
--         WHERE S.SLIP_NO = J.SLIP_NO
--           AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE
--           AND S.REPORTING_DATE BETWEEN AND
--                   AND S.SLIP_STATUS = '승인'
--           AND A.ACCOUNT_INNER_CODE =
--         GROUP BY s.REPORTING_DATE
--         ORDER BY S.REPORTING_DATE

SELECT
    TO_CHAR(TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS APPROVAL_DATE,
    J.ACCOUNT_NAME,
    J.LEFT_DEBTOR_PRICE,
    J.RIGHT_CREDITS_PRICE,
    S.EXPENSE_REPORT,
    SUM(J.LEFT_DEBTOR_PRICE - J.RIGHT_CREDITS_PRICE)
        OVER (ORDER BY TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD')
            ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS balance
FROM SLIP S
         JOIN JOURNAL J ON J.SLIP_NO = S.SLIP_NO
    <where>
    TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD') BETWEEN #{fromDate} AND #{toDate}
         <if test="accountName != null and accountName != ''">
       AND J.ACCOUNT_NAME = #{accountName}
         </if>
</where>

UNION ALL

SELECT
    TO_CHAR(TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD'), 'YYYY-MM') || '월 합계' AS APPROVAL_DATE,
    '월계' AS ACCOUNT_NAME,
    SUM(J.LEFT_DEBTOR_PRICE) AS TOTAL_LEFT_DEBTOR_PRICE,
    SUM(J.RIGHT_CREDITS_PRICE) AS TOTAL_RIGHT_CREDITS_PRICE,
    NULL AS EXPENSE_REPORT,
    SUM(J.LEFT_DEBTOR_PRICE - J.RIGHT_CREDITS_PRICE) AS balance
FROM JOURNAL J
         JOIN SLIP S ON S.SLIP_NO = J.SLIP_NO
    <where>
    TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD') BETWEEN #{fromDate} AND #{toDate}
         <if test="accountName != null and accountName != ''">
       AND J.ACCOUNT_NAME = #{accountName}
         </if>
</where>
GROUP BY TO_CHAR(TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD'), 'YYYY-MM')

UNION ALL

SELECT
    NULL AS APPROVAL_DATE,
    '총합' AS ACCOUNT_NAME,
    SUM(J.LEFT_DEBTOR_PRICE) AS TOTAL_LEFT_DEBTOR_PRICE,
    SUM(J.RIGHT_CREDITS_PRICE) AS TOTAL_RIGHT_CREDITS_PRICE,
    NULL AS EXPENSE_REPORT,
    SUM(J.LEFT_DEBTOR_PRICE - J.RIGHT_CREDITS_PRICE) AS balance
FROM JOURNAL J
         JOIN SLIP S ON S.SLIP_NO = J.SLIP_NO
    <where>
    TO_DATE(S.APPROVAL_DATE, 'YYYY-MM-DD') BETWEEN #{fromDate} AND #{toDate}
         <if test="accountName != null and accountName != ''">
       AND J.ACCOUNT_NAME = #{accountName}
         </if>
</where>
ORDER BY 1 NULLS LAST
    </select>

    <select id="selectJournalList" parameterType="String" resultMap="journalResult">
        <![CDATA[
		SELECT J.JOURNAL_NO,
               J.SLIP_NO,
               BALANCE_DIVISION,
               J.ACCOUNT_INNER_CODE,
               SUM(LEFT_DEBTOR_PRICE + RIGHT_CREDITS_PRICE) AS PRICE,
               LEFT_DEBTOR_PRICE,
               RIGHT_CREDITS_PRICE,
               A.ACCOUNT_NAME,
               C.CUSTOMER_CODE,
               C.CUSTOMER_NAME
        FROM SLIP S,
             JOURNAL J,
             ACCOUNT A,
             CUSTOMER C
        WHERE J.SLIP_NO = S.SLIP_NO
          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE
          AND S.SLIP_NO = #{slipNo}
          AND J.CUSTOMER_CODE=C.CUSTOMER_CODE(+)
          GROUP BY
        	J.JOURNAL_NO,
               J.SLIP_NO,
               BALANCE_DIVISION,
               J.ACCOUNT_INNER_CODE,
               C.CUSTOMER_CODE,
                 C.CUSTOMER_NAME,
               LEFT_DEBTOR_PRICE,
               RIGHT_CREDITS_PRICE,
               A.ACCOUNT_NAME
          ORDER BY J.JOURNAL_NO
          ]]>
    </select>

<!-- 분개장 표현이 어색함 삭제처리 2023.12.02 -->
<!--    <select id="selectJournalDoubleList" parameterType="map"-->
<!--            resultMap="journalDoubleResult">-->
<!--         <![CDATA[-->
<!--         SELECT-->
<!--A.REPORTING_DATE AS REPORTING_DATE,-->
<!--A.ACCOUNT_NAME AS LEFT_ACCOUNT_NAME,-->
<!--DECODE(-->
<!--A.LEFT_DEBTOR_PRICE-B.RIGHT_CREDITS_PRICE,0, A.LEFT_DEBTOR_PRICE,-->
<!--B.RIGHT_CREDITS_PRICE) AS LEFT_DEBTOR_PRICE,-->
<!--B.ACCOUNT_NAME AS  RIGHT_ACCOUNT_NAME,-->
<!--B.RIGHT_CREDITS_PRICE  AS RIGHT_CREDITS_PRICE,-->
<!--A.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--A.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--FROM-->
<!--(SELECT-->
<!--S.REPORTING_DATE AS REPORTING_DATE,-->
<!--J.JOURNAL_NO,-->
<!--               J.SLIP_NO AS SLIP_NO,-->
<!--               BALANCE_DIVISION,-->
<!--               J.ACCOUNT_INNER_CODE,-->
<!--               J.CUSTOMER_CODE,-->
<!--               LEFT_DEBTOR_PRICE,-->
<!--               RIGHT_CREDITS_PRICE,-->
<!--               A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--               C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--               S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--        FROM SLIP S,-->
<!--             JOURNAL J,-->
<!--             ACCOUNT A,-->
<!--             CUSTOMER C-->
<!--        WHERE J.SLIP_NO = S.SLIP_NO-->
<!--          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--          AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--          AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--          AND S.SLIP_STATUS = '승인'-->
<!--        ORDER BY S.REPORTING_DATE) A,-->
<!--        (SELECT J.JOURNAL_NO,-->
<!--               J.SLIP_NO AS SLIP_NO,-->
<!--               BALANCE_DIVISION,-->
<!--               J.ACCOUNT_INNER_CODE,-->
<!--               J.CUSTOMER_CODE,-->
<!--               LEFT_DEBTOR_PRICE,-->
<!--               RIGHT_CREDITS_PRICE,-->
<!--               A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--               C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--               S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--        FROM SLIP S,-->
<!--             JOURNAL J,-->
<!--             ACCOUNT A,-->
<!--             CUSTOMER C-->
<!--        WHERE J.SLIP_NO = S.SLIP_NO-->
<!--          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--          AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--          AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--          AND S.SLIP_STATUS = '승인'-->
<!--        ORDER BY S.REPORTING_DATE) B-->
<!--        WHERE A.SLIP_NO = B.SLIP_NO-->
<!--        AND A.LEFT_DEBTOR_PRICE <>0-->
<!--				AND B.RIGHT_CREDITS_PRICE <>0-->
<!--        UNION ALL-->
<!--        SELECT-->
<!--'합계' AS REPORTING_DATE,-->
<!--NULL AS LEFT_ACCOUNT_NAME,-->
<!--SUM(DECODE(-->
<!--A.LEFT_DEBTOR_PRICE-B.RIGHT_CREDITS_PRICE,0, A.LEFT_DEBTOR_PRICE,-->
<!--B.RIGHT_CREDITS_PRICE)) AS LEFT_DEBTOR_PRICE,-->
<!--NULL AS  RIGHT_ACCOUNT_NAME,-->
<!--SUM(B.RIGHT_CREDITS_PRICE) AS RIGHT_CREDITS_PRICE,-->
<!--NULL AS CUSTOMER_NAME,-->
<!--NULL AS EXPENSE_REPORT-->
<!--FROM-->
<!--(SELECT-->
<!--S.REPORTING_DATE AS REPORTING_DATE,-->
<!--J.JOURNAL_NO,-->
<!--               J.SLIP_NO AS SLIP_NO,-->
<!--               BALANCE_DIVISION,-->
<!--               J.ACCOUNT_INNER_CODE,-->
<!--               J.CUSTOMER_CODE,-->
<!--               LEFT_DEBTOR_PRICE,-->
<!--               RIGHT_CREDITS_PRICE,-->
<!--               A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--               C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--               S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--        FROM SLIP S,-->
<!--             JOURNAL J,-->
<!--             ACCOUNT A,-->
<!--             CUSTOMER C-->
<!--        WHERE J.SLIP_NO = S.SLIP_NO-->
<!--          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--          AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--          AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--          AND S.SLIP_STATUS = '승인'-->
<!--        ORDER BY S.REPORTING_DATE) A,-->
<!--        (SELECT J.JOURNAL_NO,-->
<!--               J.SLIP_NO AS SLIP_NO,-->
<!--               BALANCE_DIVISION,-->
<!--               J.ACCOUNT_INNER_CODE,-->
<!--               J.CUSTOMER_CODE,-->
<!--               LEFT_DEBTOR_PRICE,-->
<!--               RIGHT_CREDITS_PRICE,-->
<!--               A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--               C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--               S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--        FROM SLIP S,-->
<!--             JOURNAL J,-->
<!--             ACCOUNT A,-->
<!--             CUSTOMER C-->
<!--        WHERE J.SLIP_NO = S.SLIP_NO-->
<!--          AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--          AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--          AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--          AND S.SLIP_STATUS = '승인'-->
<!--        ORDER BY S.REPORTING_DATE) B-->
<!--        WHERE A.SLIP_NO = B.SLIP_NO-->
<!--        AND A.LEFT_DEBTOR_PRICE <>0-->
<!--				AND B.RIGHT_CREDITS_PRICE <>0-->
<!--        ]]>-->
<!--    </select>-->

<!--    2025/03/24 원래 분개장 쿼리-->
<!--    <select id="selectJournalDoubleList" parameterType="String"-->
<!--            resultMap="journalDoubleResult">-->
<!--         <![CDATA[-->
<!--        SELECT-->
<!--            A.REPORTING_DATE AS REPORTING_DATE,-->
<!--            A.ACCOUNT_NAME AS LEFT_ACCOUNT_NAME,-->
<!--            TO_CHAR(A.LEFT_DEBTOR_PRICE, 'FM999,999,999,999') AS LEFT_DEBTOR_PRICE,-->
<!--            B.ACCOUNT_NAME AS RIGHT_ACCOUNT_NAME,-->
<!--            TO_CHAR(B.RIGHT_CREDITS_PRICE, 'FM999,999,999,999')  AS RIGHT_CREDITS_PRICE,-->
<!--            A.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--            A.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--        FROM-->
<!--            (SELECT-->
<!--                 S.REPORTING_DATE AS REPORTING_DATE,-->
<!--                 J.JOURNAL_NO,-->
<!--                 J.SLIP_NO AS SLIP_NO,-->
<!--                 BALANCE_DIVISION,-->
<!--                 J.ACCOUNT_INNER_CODE,-->
<!--                 J.CUSTOMER_CODE,-->
<!--                 LEFT_DEBTOR_PRICE,-->
<!--                 RIGHT_CREDITS_PRICE,-->
<!--                 A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--                 C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--                 S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--             FROM SLIP S,-->
<!--                  JOURNAL J,-->
<!--                  ACCOUNT A,-->
<!--                  CUSTOMER C-->
<!--             WHERE J.SLIP_NO = S.SLIP_NO-->
<!--               AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--               AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--               AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--               AND S.SLIP_STATUS = '승인'-->
<!--             ORDER BY S.REPORTING_DATE) A,-->
<!--            (SELECT J.JOURNAL_NO,-->
<!--                    J.SLIP_NO AS SLIP_NO,-->
<!--                    BALANCE_DIVISION,-->
<!--                    J.ACCOUNT_INNER_CODE,-->
<!--                    J.CUSTOMER_CODE,-->
<!--                    LEFT_DEBTOR_PRICE,-->
<!--                    RIGHT_CREDITS_PRICE,-->
<!--                    A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--                    C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--                    S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--             FROM SLIP S,-->
<!--                  JOURNAL J,-->
<!--                  ACCOUNT A,-->
<!--                  CUSTOMER C-->
<!--             WHERE J.SLIP_NO = S.SLIP_NO-->
<!--               AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--               AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--               AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--               AND S.SLIP_STATUS = '승인'-->
<!--             ORDER BY S.REPORTING_DATE) B-->
<!--        WHERE A.SLIP_NO = B.SLIP_NO-->
<!--          AND ((A.LEFT_DEBTOR_PRICE = 0 AND B.RIGHT_CREDITS_PRICE <> 0)-->
<!--            OR (A.LEFT_DEBTOR_PRICE <> 0 AND B.RIGHT_CREDITS_PRICE = 0))-->
<!--        UNION ALL-->
<!--        SELECT-->
<!--            '[합 계]' AS REPORTING_DATE,-->
<!--            NULL AS LEFT_ACCOUNT_NAME,-->
<!--            TO_CHAR(SUM(A.LEFT_DEBTOR_PRICE), 'FM999,999,999,999') AS LEFT_DEBTOR_PRICE,-->
<!--            NULL AS  RIGHT_ACCOUNT_NAME,-->
<!--            TO_CHAR(SUM(B.RIGHT_CREDITS_PRICE), 'FM999,999,999,999') AS RIGHT_CREDITS_PRICE,-->
<!--            NULL AS CUSTOMER_NAME,-->
<!--            NULL AS EXPENSE_REPORT-->
<!--        FROM-->
<!--            (SELECT-->
<!--                 S.REPORTING_DATE AS REPORTING_DATE,-->
<!--                 J.JOURNAL_NO,-->
<!--                 J.SLIP_NO AS SLIP_NO,-->
<!--                 BALANCE_DIVISION,-->
<!--                 J.ACCOUNT_INNER_CODE,-->
<!--                 J.CUSTOMER_CODE,-->
<!--                 LEFT_DEBTOR_PRICE,-->
<!--                 RIGHT_CREDITS_PRICE,-->
<!--                 A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--                 C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--                 S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--             FROM SLIP S,-->
<!--                  JOURNAL J,-->
<!--                  ACCOUNT A,-->
<!--                  CUSTOMER C-->
<!--             WHERE J.SLIP_NO = S.SLIP_NO-->
<!--               AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--               AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--               AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--               AND S.SLIP_STATUS = '승인'-->
<!--             ORDER BY S.REPORTING_DATE) A,-->
<!--            (SELECT J.JOURNAL_NO,-->
<!--                    J.SLIP_NO AS SLIP_NO,-->
<!--                    BALANCE_DIVISION,-->
<!--                    J.ACCOUNT_INNER_CODE,-->
<!--                    J.CUSTOMER_CODE,-->
<!--                    LEFT_DEBTOR_PRICE,-->
<!--                    RIGHT_CREDITS_PRICE,-->
<!--                    A.ACCOUNT_NAME AS ACCOUNT_NAME,-->
<!--                    C.CUSTOMER_NAME AS CUSTOMER_NAME,-->
<!--                    S.EXPENSE_REPORT AS EXPENSE_REPORT-->
<!--             FROM SLIP S,-->
<!--                  JOURNAL J,-->
<!--                  ACCOUNT A,-->
<!--                  CUSTOMER C-->
<!--             WHERE J.SLIP_NO = S.SLIP_NO-->
<!--               AND J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE-->
<!--               AND J.CUSTOMER_CODE = C.CUSTOMER_CODE(+)-->
<!--               AND S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}-->
<!--               AND S.SLIP_STATUS = '승인'-->
<!--             ORDER BY S.REPORTING_DATE) B-->
<!--        WHERE A.SLIP_NO = B.SLIP_NO-->
<!--          AND ((A.LEFT_DEBTOR_PRICE = 0 AND B.RIGHT_CREDITS_PRICE <> 0)-->
<!--            OR (A.LEFT_DEBTOR_PRICE <> 0 AND B.RIGHT_CREDITS_PRICE = 0))-->
<!--        ORDER BY REPORTING_DATE, EXPENSE_REPORT, RIGHT_CREDITS_PRICE-->
<!--        ]]>-->
<!--    </select>-->

<!--    수정된 분개장 쿼리-->
    <select id="selectJournalDoubleList" parameterType="map" resultMap="journalDoubleResult">
<![CDATA[
        SELECT
            S.REPORTING_DATE AS REPORTING_DATE,

            -- 차변 정보
            CASE
                WHEN J.LEFT_DEBTOR_PRICE > 0 THEN A.ACCOUNT_NAME
                ELSE NULL
                END AS LEFT_ACCOUNT_NAME,

            CASE
                WHEN J.LEFT_DEBTOR_PRICE > 0 THEN TO_CHAR(J.LEFT_DEBTOR_PRICE, 'FM999,999,999,999')
                ELSE NULL
                END AS LEFT_DEBTOR_PRICE,

            -- 대변 정보
            CASE
                WHEN J.RIGHT_CREDITS_PRICE > 0 THEN A.ACCOUNT_NAME
                ELSE NULL
                END AS RIGHT_ACCOUNT_NAME,

            CASE
                WHEN J.RIGHT_CREDITS_PRICE > 0 THEN TO_CHAR(J.RIGHT_CREDITS_PRICE, 'FM999,999,999,999')
                ELSE NULL
                END AS RIGHT_CREDITS_PRICE,

            C.CUSTOMER_NAME AS CUSTOMER_NAME,
            S.EXPENSE_REPORT AS EXPENSE_REPORT

        FROM ACCVUE80.SLIP S
                 JOIN ACCVUE80.JOURNAL J ON J.SLIP_NO = S.SLIP_NO
                 JOIN ACCVUE80.ACCOUNT A ON J.ACCOUNT_INNER_CODE = A.ACCOUNT_INNER_CODE
                 LEFT JOIN ACCVUE80.CUSTOMER C ON J.CUSTOMER_CODE = C.CUSTOMER_CODE

        WHERE S.REPORTING_DATE BETWEEN #{fromDate} AND #{toDate}
          AND S.SLIP_STATUS = '승인'

        ORDER BY S.REPORTING_DATE, J.SLIP_NO, J.JOURNAL_NO
        ]]>
</select>



    <select id="selectJournalName" parameterType="String" resultType="String">
    <![CDATA[    
        SELECT #{slipNo} || 'JOURNAL' || (NVL(COUNT(*) + 1,0))
        FROM JOURNAL
        WHERE SLIP_NO = #{slipNo}
        ]]> 
    </select>

    <insert id="insertJournal" parameterType="kr.co.seoulit.erp.account.slip.to.JournalBean">
    <![CDATA[
      INSERT INTO JOURNAL(JOURNAL_NO,SLIP_NO,BALANCE_DIVISION,ACCOUNT_INNER_CODE,CUSTOMER_CODE,LEFT_DEBTOR_PRICE,RIGHT_CREDITS_PRICE, ACCOUNT_NAME)
        VALUES (#{journalNo}, #{slipNo}, #{balanceDivision}, #{accountInnerCode}, #{customerCode},#{leftDebitPrice}, #{rightCreditPrice}, #{accountName}
                )
                ]]> 
    </insert>

    <select id="selectIsChangeAccountCode" parameterType="kr.co.seoulit.erp.account.slip.to.JournalBean" resultType="int">
   <![CDATA[
        SELECT DECODE(ACCOUNT_INNER_CODE, #{accountCode}, 0, 1)
        FROM JOURNAL
        WHERE JOURNAL_NO = #{journalNo}
]]> 
    </select>

    <delete id="deleteJournal" parameterType="String">
        DELETE
        FROM JOURNAL
        WHERE SLIP_NO = #{slipNo}
    </delete>

    <update id="updateJournal" parameterType="kr.co.seoulit.erp.account.slip.to.JournalBean">
  <![CDATA[
        UPDATE JOURNAL
        SET ACCOUNT_INNER_CODE = #{accountCode},
            ACCOUNT_NAME = #{accountName},
            CUSTOMER_CODE = #{customerCode},
            RIGHT_CREDITS_PRICE = #{rightCreditPrice},
            LEFT_DEBTOR_PRICE = #{leftDebitPrice}
        WHERE SLIP_NO = #{slipNo}
          AND JOURNAL_NO = #{journalNo}
          ]]> 
    </update>

    <insert id="insertJournalSeparator" parameterType="Map" >
    <![CDATA[    
      INSERT INTO JOURNAL_SEPARATOR(SLIP_NO,DELIVERY_NO,EMP_CODE,APPLY_YEAR_MONTH)
        VALUES (#{SlipNo},#{deliveryNo},#{empCode},#{applyYearMonth} 
                )
                ]]> 
    </insert>

    <select id="selectJournalSeparator" parameterType="String" resultType="kr.co.seoulit.erp.account.slip.to.JournalSeparatorBean">
    <![CDATA[    
        SELECT * 
        FROM JOURNAL_SEPARATOR
        WHERE SLIP_NO = #{slipNo}
        ]]> 
    </select>
</mapper>